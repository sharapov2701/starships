{"version":3,"sources":["components/Header/Header.module.css","components/Catalog/Catalog.module.css","components/Button/Button.module.css","components/CompareItem/CompareItem.module.css","components/Fields/Fields.module.css","components/Cell/Cell.module.css","components/Compare/Compare.module.css","App.module.css","components/Button/Button.jsx","components/CatalogItem/CatalogItem.jsx","redux/actions.js","redux/types.js","components/Catalog/Catalog.jsx","components/Cell/Cell.jsx","components/Fields/Fields.jsx","components/CompareItem/CompareItem.jsx","components/Compare/Compare.jsx","components/Header/Header.jsx","App.js","serviceWorker.js","redux/rootReducer.js","index.js","components/CatalogItem/CatalogItem.module.css"],"names":["module","exports","Button","onClick","text","className","style","compare","formatPrice","price","isNaN","result","counter","i","length","split","reverse","join","CatalogItem","starship","dispatch","useDispatch","isCompared","item","title","background","color","name","manufacturer","model","cost","cost_in_credits","type","payload","id","Catalog","items","useSelector","state","starships","map","key","catalog","Cell","props","cell","data-row","row","content","formatTitle","string","replace","charAt","toUpperCase","slice","Fields","fieldsTitles","fields","Object","keys","field","Array","isArray","fontSize","position","CompareItem","notNeededFields","hasOwnProperty","includes","resize","cells","document","querySelectorAll","heights","height","forEach","dataset","offsetHeight","element","Math","max","Compare","shipItems","filter","s","index","useEffect","Header","header","to","connect","a","fetch","then","d","json","data","Promise","all","results","films","f","pilots","App","path","exact","component","Boolean","window","location","hostname","match","initialState","getColor","floor","random","toString","store","createStore","action","comparedShips","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.62b7f0af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1uccA\",\"title\":\"Header_title__3MWEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog\":\"Catalog_catalog__2GpC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"compare\":\"Button_compare__2-xYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CompareItem_item__ftzF4\",\"fields\":\"CompareItem_fields__2vqey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titles\":\"Fields_titles__gWEDG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__g5hIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Compare_items__1wZii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3rjn-\"};","import React from 'react'\r\nimport style from './Button.module.css'\r\n\r\nconst Button = ({ onClick, text }) => {\r\n    return (\r\n        <button onClick={onClick} className={style.compare}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleCompare } from '../../redux/actions'\r\nimport style from './CatalogItem.module.css'\r\nimport Button from '../Button/Button'\r\n\r\nconst CatalogItem = ({ starship }) => {\r\n    const dispatch = useDispatch()\r\n    const text = starship.isCompared\r\n        ? 'Удалить из сранения'\r\n        : 'Добавить к сравнению'\r\n\r\n    return (\r\n        <div className={style.item}>\r\n            <div className={style.title} style={{ background: starship.color }}>\r\n                <span className={style.name}>{starship.name}</span>\r\n            </div>\r\n            <div className={style.manufacturer}>{starship.manufacturer}</div>\r\n            <div className={style.model}>{starship.model}</div>\r\n            <div className={style.cost}>\r\n                {formatPrice(starship.cost_in_credits)}\r\n            </div>\r\n            <Button\r\n                onClick={() => dispatch(toggleCompare(starship.id))}\r\n                text={text}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst formatPrice = price => {\r\n    if (isNaN(+price)) {\r\n        return price\r\n    }\r\n    let result = ''\r\n    let counter = 0\r\n    for (let i = price.length - 1; i >= 0; i--) {\r\n        counter++\r\n        result += price[i]\r\n        if (counter === 3) {\r\n            result += ' '\r\n            counter = 0\r\n        }\r\n    }\r\n    return `${result.split('').reverse().join('')} $`\r\n}\r\n\r\nexport default CatalogItem\r\n","import { GET_STARSHIPS, TOGGLE_COMPARE } from './types'\r\n\r\nexport const getStarships = () => {\r\n    return async dispatch => {\r\n        const data = await fetch('https://swapi.dev/api/starships/').then(d =>\r\n            d.json()\r\n        )\r\n\r\n        const starships = await Promise.all(\r\n            data.results.map(async starship => {\r\n                starship.films = await Promise.all(\r\n                    starship.films.map(f =>\r\n                        fetch(f)\r\n                            .then(d => d.json())\r\n                            .then(d => d.title)\r\n                    )\r\n                )\r\n                starship.pilots = await Promise.all(\r\n                    starship.pilots.map(f =>\r\n                        fetch(f)\r\n                            .then(d => d.json())\r\n                            .then(d => d.name)\r\n                    )\r\n                )\r\n                return starship\r\n            })\r\n        )\r\n\r\n        dispatch({ type: GET_STARSHIPS, payload: starships })\r\n    }\r\n}\r\n\r\nexport const toggleCompare = index => ({ type: TOGGLE_COMPARE, payload: index })\r\n","export const GET_STARSHIPS = 'GET_STARSHIPS'\r\nexport const TOGGLE_COMPARE = 'TOGGLE_COMPARE'\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport style from './Catalog.module.css'\r\nimport CatalogItem from '../CatalogItem/CatalogItem'\r\n\r\nconst Catalog = () => {\r\n    const starships = useSelector(state => state.starships)\r\n    const items = starships.map(starship => (\r\n        <CatalogItem starship={{ ...starship }} key={starship.id} />\r\n    ))\r\n\r\n    return <div className={style.catalog}>{items}</div>\r\n}\r\n\r\nexport default Catalog\r\n","import React from 'react'\r\nimport style from './Cell.module.css'\r\n\r\nconst Cell = props => {\r\n    return (\r\n        <div\r\n            className={`cell ${style.cell}`}\r\n            data-row={props.row}\r\n            style={props.style}\r\n        >\r\n            {props.content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react'\r\nimport style from './Fields.module.css'\r\nimport Cell from '../Cell/Cell'\r\n\r\nconst Fields = ({ starship, fieldsTitles }) => {\r\n    const titles = Object.keys(starship)\r\n    const fields = titles.map((title, row) => {\r\n        let field = starship[title]\r\n        if (Array.isArray(field)) {\r\n            field = field.length ? field.join(', ') : '-'\r\n        }\r\n        return (\r\n            <div className={title === 'name' ? 'compare-header' : ''}>\r\n                <Cell\r\n                    content={fieldsTitles ? formatTitle(title) : ''}\r\n                    style={{\r\n                        fontSize: '14px',\r\n                        color: 'rgba(0, 0, 0, 0.5)',\r\n                        position: title === 'name' ? 'sticky' : 'static'\r\n                    }}\r\n                />\r\n                <Cell row={row} content={field || '-'} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return <div className={style.fields}>{fields}</div>\r\n}\r\n\r\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1)\r\nconst formatTitle = title => capitalize(title.replace(/_/g, ' '))\r\n\r\nexport default Fields\r\n","import React from 'react'\r\nimport style from './CompareItem.module.css'\r\nimport Fields from '../Fields/Fields'\r\n\r\nconst CompareItem = props => {\r\n    const starship = { ...props.starship }\r\n    const notNeededFields = [\r\n        'created',\r\n        'edited',\r\n        'url',\r\n        'id',\r\n        'color',\r\n        'isCompared'\r\n    ]\r\n\r\n    for (const title in starship) {\r\n        if (starship.hasOwnProperty(title)) {\r\n            if (notNeededFields.includes(title)) {\r\n                delete starship[title]\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.item}>\r\n            <Fields starship={starship} fieldsTitles={props.fieldsTitles} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompareItem\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport CompareItem from '../CompareItem/CompareItem'\r\nimport style from './Compare.module.css'\r\n\r\nconst Compare = () => {\r\n    const starships = useSelector(state => state.starships)\r\n    const comparedShips = starships.filter(s => s.isCompared)\r\n    const shipItems = comparedShips.map((s, index) => (\r\n        <CompareItem starship={s} fieldsTitles={index === 0 ? true : false} />\r\n    ))\r\n\r\n    useEffect(resize)\r\n\r\n    return <div className={style.items}>{shipItems}</div>\r\n}\r\n\r\nconst resize = () => {\r\n    const cells = document.querySelectorAll('.cell')\r\n    let heights = {}\r\n\r\n    cells.forEach(cell => {\r\n        const row = cell.dataset.row\r\n        heights[row] = heights[row] ? [...heights[row], cell.offsetHeight] : []\r\n    })\r\n\r\n    for (const height in heights) {\r\n        if (heights.hasOwnProperty(height)) {\r\n            let element = heights[height]\r\n            heights[height] = Math.max(...element) + 'px'\r\n        }\r\n    }\r\n\r\n    cells.forEach(cell => {\r\n        cell.style.height = heights[cell.dataset.row]\r\n    })\r\n}\r\n\r\nexport default Compare\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport style from './Header.module.css'\r\nimport Button from '../Button/Button'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={style.header}>\r\n            <NavLink className={style.title} to='/'>\r\n                <h1>Starships</h1>\r\n            </NavLink>\r\n            <NavLink to='/compare/'>\r\n                <Button text='Сравнить' />\r\n            </NavLink>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Catalog from './components/Catalog/Catalog'\r\nimport Compare from './components/Compare/Compare'\r\nimport style from './App.module.css'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport { getStarships } from './redux/actions'\r\nimport Header from './components/Header/Header'\r\nimport { Route } from 'react-router-dom'\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const starships = useSelector(state => state.starships)\r\n    if (!starships.length) {\r\n        dispatch(getStarships())\r\n    }\r\n\r\n    return (\r\n        <div className={style.App}>\r\n            <Header />\r\n            <Route path='/' exact component={Catalog} />\r\n            <Route path='/compare' exact component={Compare} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => state\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { GET_STARSHIPS, TOGGLE_COMPARE } from './types'\r\n\r\nconst initialState = {\r\n    starships: []\r\n}\r\n\r\nconst getColor = () => '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_STARSHIPS:\r\n            const starships = action.payload.map((starship, id) => ({\r\n                ...starship,\r\n                id,\r\n                color: getColor(),\r\n                isCompared: false\r\n            }))\r\n            return { ...state, starships }\r\n\r\n        case TOGGLE_COMPARE:\r\n            const comparedShips = state.starships.map(starship => {\r\n                if (starship.id === action.payload) {\r\n                    starship.isCompared = !starship.isCompared\r\n                }\r\n                return starship\r\n            })\r\n            return { ...state, starships: comparedShips }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { compose, createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { rootReducer } from './redux/rootReducer'\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CatalogItem_item__3nAVJ\",\"title\":\"CatalogItem_title__rBGlT\",\"name\":\"CatalogItem_name__2NeHN\",\"manufacturer\":\"CatalogItem_manufacturer__35EX0\",\"model\":\"CatalogItem_model__3HlwH\",\"cost\":\"CatalogItem_cost__N_fqV\"};"],"sourceRoot":""}